// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: grpc.proto

package grpc

import (
	context "context"
	reflect "reflect"
	sync "sync"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Structmsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Rating   int32  `protobuf:"varint,3,opt,name=Rating,proto3" json:"Rating,omitempty"`
	Platform string `protobuf:"bytes,4,opt,name=Platform,proto3" json:"Platform,omitempty"`
	Date     string `protobuf:"bytes,5,opt,name=Date,proto3" json:"Date,omitempty"`
	Err      string `protobuf:"bytes,6,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *Structmsg) Reset() {
	*x = Structmsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Structmsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Structmsg) ProtoMessage() {}

func (x *Structmsg) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Structmsg.ProtoReflect.Descriptor instead.
func (*Structmsg) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *Structmsg) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Structmsg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Structmsg) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Structmsg) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Structmsg) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Structmsg) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type Errmsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *Errmsg) Reset() {
	*x = Errmsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Errmsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Errmsg) ProtoMessage() {}

func (x *Errmsg) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Errmsg.ProtoReflect.Descriptor instead.
func (*Errmsg) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *Errmsg) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *Id) Reset() {
	*x = Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *Id) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

var File_grpc_proto protoreflect.FileDescriptor

var file_grpc_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x72,
	0x70, 0x63, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6d, 0x73, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x1a,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x14, 0x0a, 0x02, 0x69, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44,
	0x32, 0xa5, 0x01, 0x0a, 0x04, 0x43, 0x52, 0x55, 0x44, 0x12, 0x29, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x6d, 0x73, 0x67, 0x1a, 0x0c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x72, 0x72, 0x6d,
	0x73, 0x67, 0x22, 0x00, 0x12, 0x22, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x08,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x64, 0x1a, 0x0c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x6d, 0x73, 0x67, 0x1a, 0x0c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x72, 0x72, 0x6d, 0x73,
	0x67, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x08, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x69, 0x64, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x6d, 0x73, 0x67, 0x22, 0x00, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x75, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_proto_rawDescOnce sync.Once
	file_grpc_proto_rawDescData = file_grpc_proto_rawDesc
)

func file_grpc_proto_rawDescGZIP() []byte {
	file_grpc_proto_rawDescOnce.Do(func() {
		file_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_proto_rawDescData)
	})
	return file_grpc_proto_rawDescData
}

var (
	file_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
	file_grpc_proto_goTypes  = []interface{}{
		(*Structmsg)(nil), // 0: grpc.structmsg
		(*Errmsg)(nil),    // 1: grpc.errmsg
		(*Id)(nil),        // 2: grpc.id
	}
)

var file_grpc_proto_depIdxs = []int32{
	0, // 0: grpc.CRUD.Create:input_type -> grpc.structmsg
	2, // 1: grpc.CRUD.Delete:input_type -> grpc.id
	0, // 2: grpc.CRUD.Update:input_type -> grpc.structmsg
	2, // 3: grpc.CRUD.Read:input_type -> grpc.id
	1, // 4: grpc.CRUD.Create:output_type -> grpc.errmsg
	1, // 5: grpc.CRUD.Delete:output_type -> grpc.errmsg
	1, // 6: grpc.CRUD.Update:output_type -> grpc.errmsg
	0, // 7: grpc.CRUD.Read:output_type -> grpc.structmsg
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_grpc_proto_init() }
func file_grpc_proto_init() {
	if File_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Structmsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Errmsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_proto_goTypes,
		DependencyIndexes: file_grpc_proto_depIdxs,
		MessageInfos:      file_grpc_proto_msgTypes,
	}.Build()
	File_grpc_proto = out.File
	file_grpc_proto_rawDesc = nil
	file_grpc_proto_goTypes = nil
	file_grpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ context.Context
	_ grpc.ClientConnInterface
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CRUDClient is the client API for CRUD service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CRUDClient interface {
	Create(ctx context.Context, in *Structmsg, opts ...grpc.CallOption) (*Errmsg, error)
	Delete(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Errmsg, error)
	Update(ctx context.Context, in *Structmsg, opts ...grpc.CallOption) (*Errmsg, error)
	Read(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Structmsg, error)
}

type cRUDClient struct {
	cc grpc.ClientConnInterface
}

func NewCRUDClient(cc grpc.ClientConnInterface) CRUDClient {
	return &cRUDClient{cc}
}

func (c *cRUDClient) Create(ctx context.Context, in *Structmsg, opts ...grpc.CallOption) (*Errmsg, error) {
	out := new(Errmsg)
	err := c.cc.Invoke(ctx, "/grpc.CRUD/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cRUDClient) Delete(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Errmsg, error) {
	out := new(Errmsg)
	err := c.cc.Invoke(ctx, "/grpc.CRUD/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cRUDClient) Update(ctx context.Context, in *Structmsg, opts ...grpc.CallOption) (*Errmsg, error) {
	out := new(Errmsg)
	err := c.cc.Invoke(ctx, "/grpc.CRUD/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cRUDClient) Read(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Structmsg, error) {
	out := new(Structmsg)
	err := c.cc.Invoke(ctx, "/grpc.CRUD/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CRUDServer is the server API for CRUD service.
type CRUDServer interface {
	Create(context.Context, *Structmsg) (*Errmsg, error)
	Delete(context.Context, *Id) (*Errmsg, error)
	Update(context.Context, *Structmsg) (*Errmsg, error)
	Read(context.Context, *Id) (*Structmsg, error)
}

// UnimplementedCRUDServer can be embedded to have forward compatible implementations.
type UnimplementedCRUDServer struct {
}

func (*UnimplementedCRUDServer) Create(context.Context, *Structmsg) (*Errmsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}

func (*UnimplementedCRUDServer) Delete(context.Context, *Id) (*Errmsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func (*UnimplementedCRUDServer) Update(context.Context, *Structmsg) (*Errmsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func (*UnimplementedCRUDServer) Read(context.Context, *Id) (*Structmsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}

func RegisterCRUDServer(s *grpc.Server, srv CRUDServer) {
	s.RegisterService(&_CRUD_serviceDesc, srv)
}

func _CRUD_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Structmsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CRUDServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CRUD/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CRUDServer).Create(ctx, req.(*Structmsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _CRUD_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CRUDServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CRUD/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CRUDServer).Delete(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _CRUD_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Structmsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CRUDServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CRUD/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CRUDServer).Update(ctx, req.(*Structmsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _CRUD_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CRUDServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CRUD/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CRUDServer).Read(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

var _CRUD_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.CRUD",
	HandlerType: (*CRUDServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _CRUD_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _CRUD_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _CRUD_Update_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _CRUD_Read_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc.proto",
}
